Комментарий 1: Всегда смотри, что тебе выдаёт скрипт (и выдаёт ли), уже потом делай с данными свои дела. В консоль сделай вывод что-ли для проверки, что хоть вообще выдаётся

Комментарий 2: Очень внимательно смотри и читай это, потом ещё раз посмотри, затем посмотри соответсвующий скрипт (там могут быть пояснительные комментарии) и только в случае крайней нужды обращайся за пояснениями

Комментарий 3: Проверяй, чтоб была папка images, в ней папка users и default_profile_picture.jpg, а в папке users папки пользователей (они называются по айди каждого пользователя). Папка images должна лежать на уровне с папкой scripts, они обе должны лежать прямо в папке с проектом, а не в папка_с_проектом/какая-то_подпапка

Комментарий 4: Осторожнее с выдаваемыми путями изображений. При успехе будет выдаваться путь по типу images/users/39/39-8a51604daeeafc2a.jpg . Может выдаться images\/users\/39\/39-8a51604daeeafc2a.jpg , символы '\' - символы экранирования, они ставятся при передаче данных таким образом - echo json_encode($data); . Чтобы их не было, полученные данные необходимо декодировать (уже у себя в js) - json_encode(data) . Может выдаться /users/40/paintings/r_1.jpg - это старые тестовые данные, непригодные для использования. Надо их, по-хорошему, убрать из бд, и все старые данные тоже, и использовать для проверки данные, которые вносятся через скрипты, а не напрямую в бд

Комментарий 4.1: Все выдаваемые данные необходимо декодировать, по идее - json_encode(data)

Комментарий 5: Работа всех php скриптов была проверена для всех случаев (по возможности). Но могут быть, конечно, и ошибки, куда же без них. Если в js что-то не работает, то, скорее всего, проблема в js, но не обязательно в нём

Комментарий 6: Желательно обновлять все скрипты в своей папке с проектом, если были выложены новые скрипты (хоть и необязательно все скрипты меняются, закидываются в папку со скриптами на диске все скрипты, чисто так удобнее). Необходимо, чтоб в своей папке с проектом были все скрипты, так как некоторые скрипты для своей работы используют другие скрипты


!!! ИЗМЕНЕНИЯ В ВЫДАЧЕ ОШИБОК !!!

Теперь скрипты в ходе своей работы, если произошла ошибка, выдают ошибку текстом. Например, response['error'] = "Необходимо авторизироваться". В случае успеха скрипт выдаст необходимые данные (если это предусмотрено) и response['success'] = '1'. Вывод производится вот так: echo json_encode($response);

!!! КОНЕЦ ИЗМЕНЕНИЙ В ВЫДАЧЕ ОШИБОК !!!

--- authorizationCheck.php ---

Принимает: Ничего не принимает

Выдаёт: response['error'] = "Необходимо авторизироваться", если пользователь не авторизован. Если авторизован, то ничего не выдаёт

Использование: Используется в самих скриптах через require. Иное использование не предусмотрено

Примечания: Используется в скриптах, где необходимо, чтоб пользователь был авторизован. Следовательно, в ответе от этих скриптов можно получить response['error'] = "Необходимо авторизироваться", если пользователь не авторизован, и работа скрипта, вызвавшего authorizationCheck.php, завершится


--- changeSecurityData.php ---	

Принимает: password (текущий пароль), new_password (новый пароль), email (почта)

Выдаёт: Текущий пароль не был получен
		Неверный пароль
		Почта уже используется
		Новые пароль и/или почта не были введены
		Также выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе ничего не выдаёт

Использование: Использовать для смены пароля и почты пользователя

Примечания: Отсутствуют


--- connectDB.php ---	 

Принимает: Ничего не принимает

Выдаёт: 666 - бд отвалилась или не подключена. При успехе ничего не выдаёт

Использование: Используется в самих скриптах через require. Иное использование не предусмотрено

Примечания: Отсутствуют


--- createPost.php ---	 

Принимает: name (название картины), style_id (айди стиля картины), about (описание картины, НЕОБЯЗАТЕЛЬНО), а так же сам файл картины (см. uploadPicture.php)

Выдаёт: 5 - данные не были получены (name и style не получены)
		Также выдаёт ошибки от скрипта uploadPicture.php, смотри его
		Также выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе ничего не выдаёт

Использование: Использовать для того, чтобы сделать пост. По сути своей заносит данные о картине в бд в таблицу paintings и файл картины в папку пользователя.

Примечания: Для работы необходим скрипт uploadPicture.php


--- getCurrentUserLogin.php ---	 

Принимает: Ничего не принимает

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе выдаёт логин текущего пользователя

Использование: Да вопчем-то нигде, разве что для каких-нибудь тестов

Примечания: По сути своей практически бесполезен. Возможно стоит удалить


--- getFollowersInfo.php ---	 

Принимает: limit - количество строк sql ответа, которые необходимо вывести, offset - количество строк, подходящих для запроса, которые sql пропустит, user_id - для случаев, если надо вывести информацию НЕ относительно текущего пользователя. Если надо вывести информацию относительно текущего пользователя, то можно вызвать скрипт без передачи параметра  

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе выдаёт follower_id, login, profile_picture (расположение картинки профиля)

Использование: Использовать для отображения подписчиков пользователя

Примечания: Пользователи в выдаче отсортированны по логину. limit и offset используются для прогрузки данных по мере скроллинга


--- getFollowingInfo.php --- 	

Принимает: limit - количество строк sql ответа, которые необходимо вывести, offset - количество строк, подходящих для запроса, которые sql пропустит, user_id - для случаев, если надо вывести информацию НЕ относительно текущего пользователя. Если надо вывести информацию относительно текущего пользователя, то можно вызвать скрипт без передачи параметра

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе выдаёт following_id, login, profile_picture (расположение картинки профиля)

Использование: Использовать для отображения подписок пользователя

Примечания:	Пользователи в выдаче отсортированны по логину. limit и offset используются для прогрузки данных по мере скроллинга


--- getProfileInfo.php --- 

Принимает: user_id - для случаев, если надо вывести информацию НЕ относительно текущего пользователя. Если надо вывести информацию относительно текущего пользователя, то можно вызвать скрипт без передачи параметра

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе выдаёт:
			Информацию о том, текущий ли профиль выдаётся и есть ли подписка на этот профиль у текущего пользователя - check
			Информацию о пользователе - login, surname, name, profile_picture (расположение картинки профиля), about
			Количество постов - count_posts
			Количество подписчиков - count_followers
			Количество подписок - count_following

Использование: - Использовать при отображении информации о пользователе в профиле

Примечания: check выдаётся в результате так "is_current_profile":true,"is_follow":false . Это означает, что это выводится текущий профиль и текущий пользователь на него не подписан. Если is_current_profile = true, то кнопку подписки отрисовывать не надо. Если is_current_profile = false и is_follow = false, то надо отрисовать кнопку подписки. Если is_current_profile = false и is_follow = true, то надо отрисовать кнопку отписки.


--- getStyles.php ---

Принимает: Ничего не принимает

Выдаёт: Не успеха нет. Выдаёт style_id, name (название стиля)

Использование: Использовать в форме для создания поста, чтоб в выпадающем списке отобразить названия стилей

Примечания: Стили в выдаче отсортированны по названию


--- getUserBoughtInfo.php ---	 

Принимает: limit - количество строк sql ответа, которые необходимо вывести, offset - количество строк, подходящих для запроса, которые sql пропустит, user_id - для случаев, если надо вывести информацию НЕ относительно текущего пользователя. Если надо вывести информацию относительно текущего пользователя, то можно вызвать скрипт без передачи параметра

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе выдаёт список купленных (выигранных в аукционе) пользователем картин. Для каждой выдаёт painting_id, path_to_paint (расположение картины)

Использование: Использовать в профиле для отображения купленных пользователем картин

Примечания: Картины в выводе отсортированны по времени покупки. limit и offset используются для прогрузки данных по мере скроллинга


--- getUserDrewInfo.php ---	 

Принимает: limit - количество строк sql ответа, которые необходимо вывести, offset - количество строк, подходящих для запроса, которые sql пропустит, user_id - для случаев, если надо вывести информацию НЕ относительно текущего пользователя. Если надо вывести информацию относительно текущего пользователя, то можно вызвать скрипт без передачи параметра

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе выдаёт список нарисованных пользователем картин (его постов то есть). Для каждой выдаёт painting_id, path_to_paint

Использование: Использовать в профиле для отображения нарисованных пользователем картин (т. е. его постов)

Примечания: Картины в выводе отсортированны по времени поста. limit и offset используются для прогрузки данных по мере скроллинга


--- getUserHeadInfo.php ---

Принимает: Ничего не принимает

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе выдаёт: profile_picture (расположение картинки профиля), balance (баланс пользователя)

Использование: Использовать для отображения информации о пользователе в шапке

Примечания: Отсутствуют


--- login.php ---

Принимает: login, password

Выдаёт: 1 - логин и пароль не были получены
		2 - пользователя с таким логином не существует
		3 - пароль неверный
		В случае успеха ничего не выдаёт

Использование: Использовать для авторизации

Примечания: Отсутствуют


--- logout.php ---

Принимает: Ничего не принимает

Выдаёт: Ничего не выдаёт

Использование: Использовать для выхода пользователя из профиля. Используется в скриптах login.php и registration.php, для того, чтобы в случае когда пользователь уже авторизирован, но хочет авторизироваться под другим аккаунтом или же создать новый аккаунт, стереть данные о его текущей сессии в тот момент, когда он уже отправил новую форму авторизации/регистрации (иначе потом просто бы в новом профиле отображались его старые данные)

Примечания: Удаляет данные из текущей сессии и завершает её


--- registration.php ---

Принимает: login, password, email

Выдаёт: 1 - данные для регистрации не были получены
		2 - логин занят
		3 - почта занята
		В случае успеха ничего не выдаёт

Использование: Использовать для регистрации

Примечания: Отсутствуют


--- test.php --- 

Использование: Используется исключительно для тестирования всякой всячины в процессе разработки скриптов. Никакое использование в проекте не предусмотрено. Если лежит в папке со скриптами, то было закинуто туда случайно (поскольку лень и закидываются все файликик разом)


--- uploadPicture.php ---

Принимает: Принимает файл изображения в формате jpg, jpeg, или png

Выдаёт: 1 - файл не был получен (неизвестная ошибка загрузки)
		2 - размер файла превышает 2 мбайта 
		3 - недопустимое расширение файла
		4 - файл не удалось загрузить

Использование: Напрямую использование не предусмотрено. Используется скриптами, где загружаются изображения

Примечания: Отсутствуют


--- getPublicationFeed.php ---

Принимает: limit - количество строк sql ответа, которые необходимо вывести, offset - количество строк, подходящих для запроса, которые sql пропустит, style_id (опционально) - для сортировки по стилям

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе выдаёт:
		is_liked (лайкнул пользователь картину или нет), painting_id (айди картины), name (название картины), style (стиль картины), author_id (айди автора), author (логин автора), author_picture (аватарка автора), path_to_paint (путь к картине), likes (количество лайков), comments (количество комментариев)

Использование: Использовать для отображения ленты пользователя и сортировки её по стилям. Выдаёт массив картин по подпискам пользователя

Примечания: Картины в выдаче отсортированны по новизне. Скрипт проверен для пользователя, который подписан на 3х пользователей, из которых только у одного есть две картины, у остальных картин нет, но скрипт должен работать корректно при более сложной ситуации. limit и offset используются для прогрузки данных по мере скроллинга. is_liked = 0 - пользователь не лайкнул картину, is_liked = 1 - лайкнул (используется для закрашивания/не закрашивания кнопки лайка при загрузке)


--- dropLike.php ---

Принимает: painting_id (айди картины)

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		1 - айди картины не получено
		При успехе выдаёт обновлённое количество лайков

Использование: Использовать для лайканья постов

Примечания: Если пользователь лайк ещё не ставил, то лайк будет поставлен. Если лайк уже ставили, то лайк удалится


--- dropComment.php ---

Принимает: painting_id (айди картины), content (содержание комментария)

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		1 - данные не получены
		При успехе выдаёт обновлённое количество комментариев

Использование: Использовать для комментирования постов

Примечания: Отсутствуют


--- getPostCommentsInfo.php ---

Принимает: limit - количество строк sql ответа, которые необходимо вывести, offset - количество строк, подходящих для запроса, которые sql пропустит, painting_id (айди картины)

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		1 - айди картины не получено
		При успехе выдаёт комментарии к картине:
		comment_id (айди комментария), commentator_id (айди комментатора), commentator (логин комментатора), commentator_picture (аватарка комментатора), comment_datetime (дата и время публикации в формате Y-m-d H:i:s), content (содержание комментария)

Использование: Использовать для вывода инфы о посте

Примечания: Комментарии отсортированны по новизне. limit и offset используются для прогрузки данных по мере скроллинга. Если comment_id имеет значение NULL, то это значит, что этот комментарий написал НЕ текущий пользователь. Если комментарий написан текущим пользователем, то в comment_id будет айди комментария. comment_id используется для того, чтобы удалять/изменять комментарий, если comment_id имеет значение NULL, то кнопки удаления/изменения отрисовывать не нужно


--- getPostPaintingInfo.php ---

Принимает: painting_id (айди картины)

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		1 - айди картины не получено
		При успехе выдаёт информацию о картине и комментарии к ней:
		Картина:
		is_liked (лайкнул пользователь картину или нет), painting_id (айди картины), name (название картины), style (название стиля), author_id (айди автора), author (логин автора), author_picture (аватарка автора), path_to_paint (путь к картине), likes (кол-во лайков), comments (кол-во комментов), about (описание картины), post_datetime (дата и время публикации в формате Y-m-d H:i:s)

Использование: Использовать для вывода инфы о посте

Примечания: is_liked = 0 - пользователь не лайкнул картину, is_liked = 1 - лайкнул (используется для закрашивания/не закрашивания кнопки лайка при загрузке)


--- addBalance.php ---

Принимает: add - число в формате aa.bb

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе выдаёт balance - обновлённый баланс

Использование: Использовать для "пополнения" баланса

Примечания: Максимум, который можно хранить в balance: 9999999999.99 . Осторожнее с этим, никак пока не обработанно


--- doSubUnsub.php ---

Принимает: following_id - айди пользователя для подписки/отписки

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе выдаёт ничего

Использование: Использовать для подписки/отписки

Примечания: Отсутствуют


--- getCountries.php ---

Принимает: Ничего не принимает

Выдаёт: Не успеха нет. Выдаёт country_id, name (название страны)

Использование: Использовать в форме для изменения информации о пользователе, чтоб в выпадающем списке отобразить названия стран

Примечания: Страны в выдаче отсортированны по названию


--- deleteComment.php ---

Принимает: comment_id

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его 
		При успехе ничего не выдаёт

Использование: Использовать для удаления комментариев

Примечания: Необходимо, чтобы кнопка удаления комментария не отрисовывалась для тех комментариев, которые не написаны текущим пользователем. Как вариант, с каждым комментарием выдаётся логин автора комментария (commentator), можно получить логин текущего пользователя через скрипт getCurrentUserLogin.php, и при заполнении блока комментариев сравнивать, совпадает ли логин автора комментария с логином текущего пользователя, и если совпадает, то тогда можно отрисовать кнопку удаления.
ЕСЛИ всё-таки по ошибке отрисуется кнопка для чужого комментария, то ничего не произойдёт


--- updateComment.php ---

Принимает: comment_id, content

Выдаёт: Выдаёт ошибку от скрипта authorizationCheck.php, смотри его 
		При успехе ничего не выдаёт

Использование: Использовать для изменения комментариев

Примечания: Необходимо, чтобы кнопка изменения комментария не отрисовывалась для тех комментариев, которые не написаны текущим пользователем. Как вариант, с каждым комментарием выдаётся логин автора комментария (commentator), можно получить логин текущего пользователя через скрипт getCurrentUserLogin.php, и при заполнении блока комментариев сравнивать, совпадает ли логин автора комментария с логином текущего пользователя, и если совпадает, то тогда можно отрисовать кнопку изменения.
ЕСЛИ всё-таки по ошибке отрисуется кнопка для чужого комментария, то ничего не произойдёт


--- updateProfilePicture.php ---

Принимает: Файл изображения для профиля (см. uploadPicture.php)

Выдаёт:	Выдаёт ошибки от скрипта uploadPicture.php, смотри его
		Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе ничего не выдаёт

Использование: Использовать для того, чтобы изменить изображение профиля пользователя

Примечания: Для работы необходим скрипт uploadPicture.php


--- changeProileInfo.php ---

Принимает: surname (фамилия), name (имя), birth_date (дата рождения в формате гггг-мм-дд), country (айди страны), about (о себе)

Выдаёт:	Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе ничего не выдаёт

Использование: Использовать для того, чтобы изменять соответствующие данные пользователя

Примечания: можно передать не все элементы, а изменить только что-то одно. Но если ничего не передать, тогда веведется "Данные не были получены" (хотя надо бы проверять, что на сервер не отправлена пустая форма. Все php скрипты проверяют это, на всякий случай). ПРОВЕРЯЙТЕ, ЧТОБЫ РАЗМЕР ВНОСИМЫХ ДАННЫХ НЕ ПРЕВЫШАЛ РАЗМЕРЫ, УКАЗАННЫЕ В БД!!!


--- searchUser.php ---

Принимает: login - логин, limit - количество строк sql ответа, которые необходимо вывести

Выдаёт:	Выдаёт ошибку от скрипта authorizationCheck.php, смотри его
		При успехе выдаёт user_id, login, profile_picture

Использование: Использовать для того, чтобы искать пользователей по логину

Примечания: Отсутствуют